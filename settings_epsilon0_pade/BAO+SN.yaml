#Choose root of output files
output: chains_pade_epsilon0/BAO+SN

#Choose which data to use (path+root)
#if empty, data are not used
BAO_data: 
  path: mock_data/data/SKAOmock
  noisy: True
SN_data:
  path: mock_data/data/SNmock_breaking_pade
  noisy: True
GW_data: 

stop_at_error: True

#DDR model settings
DDR_model: 
  epsilon_model: polynomial #Available options: polynomial (others to be added), eta(z)=(1+a*z^n)^epsilon where n
                            #is the polynomial order
  pade: True #If False eta(z)=(1+z)^epsilon, if True eta(z) is calculated using the pade approximation
             #only available for n=1 

SH0ES_prior: False
BBN: False
#Available options: MH, Nautilus
#samplers options hard-coded in runner.py
sampler: MH

params: 
  omegam:
    latex: '\Omega_\mathrm{m}'
    prior:
      min: 0.001
      max: 0.99
    proposal: 0.05
    ref:
      dist: norm
      loc: 0.306
      scale: 0.01

  ombh2: 0.0222

  H0: 73.4

  epsilon0_EM:
    latex: '\epsilon_0^\mathrm{EM}'
    prior:
      min: -0.5
      max: 0.5
    proposal: 0.05
    ref:
      dist: norm
      loc: 0.1
      scale: 0.01

  epsilon0_GW: 
    latex: '\epsilon_0^\mathrm{GW}'
    value: 'lambda epsilon0_EM: epsilon0_EM'

  MB: -19.2435
      
  a_EM: 1.0
  n_EM: 1.0
  a_GW: 1.0
  n_GW: 1.0
  omk: 0.
  w: -1.
  wa: 0.
  mnu: 0.06
  nnu: 3
  rd: 
    prior:
      min: 100
      max: 200
    ref:
      dist: norm
      loc: 147
      scale: 0.5
    proposal: 0.1
    latex: r_d
  rdrag:
    latex: 'r_\mathrm{d}'
    derived: True
  omegaL:
    latex: '\Omega_\Lambda'
    derived: True

